<!doctype html>
<html lang="{{ request.locale.iso_code }}">
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width,initial-scale=1">
    <link rel="preconnect" href="https://cdn.shopify.com" crossorigin>
    <meta name="robots" content="noindex">
    <title>
      {{ page_title }}
    </title>

    {{ content_for_header }}

    {% comment %}
      Should redirect if the template is defined (will be undefined for app proxies like /apps|a|community|tools/*)
    {% endcomment %}
    {%- assign should_redirect = template != blank -%}

    {%- if should_redirect -%}
      <script>
        function getCookie(name) {
          name = name + '=';
          var decodedCookie = decodeURIComponent(document.cookie);
          var cookies = decodedCookie.split(';');
          for (var i = 0; i < cookies.length; i++) {
            var cookie = cookies[i].trim();
            if (cookie.indexOf(name) == 0) {
              return cookie.substring(name.length, cookie.length);
            }
          }
        }

        function deleteCookie(name) {
          document.cookie = name +'=; Path=/; Expires=Thu, 01 Jan 1970 00:00:01 GMT;';
        }

        function extractSubdomain(url) {
          // Extract the hostname and split it by '.'
          let parts = url.hostname.split('.');
          // Assuming the format is [subdomain.domain.tld], replace the subdomain
          if (parts.length > 2) {
              return parts[0]
          } else {
              // If there wasn't a subdomain, return null
              return null
          }
        }

        if (
          !window.Shopify.designMode &&
            window.location.pathname !== '/checkpoint' &&
            window.location.pathname !== '/throttle/queue' &&
            window.location.pathname !== '/challenge'
        ) {
          const currentUrl = new URL(window.location.href);
          const redirectUrl = currentUrl
          const subdomainPairStr = "{{ settings.subdomain_pairs | newline_to_br | strip_newlines | replace: ' ', '' }}";
          if (subdomainPairStr) {
            console.log('subdomainPairStr',subdomainPairStr)
            const subdomainPairs = subdomainPairStr.split('<br/>');
            const subdomainMap = new Map(subdomainPairs.map(subdomainPair => subdomainPair.split('>')))
            console.log('subdomainMap',subdomainMap)
            const currentSubdomain = extractSubdomain(currentUrl)
            console.log('currentSubdomain',currentSubdomain)
            if (currentSubdomain && subdomainMap.has(currentSubdomain)) {
              console.log('new hostname',currentUrl.hostname.replace(currentSubdomain,subdomainMap.get(currentSubdomain)))
              redirectUrl.hostname = currentUrl.hostname.replace(currentSubdomain,subdomainMap.get(currentSubdomain))
            }
          }
          var customRedirectsStr = "{{ settings.custom_redirects | newline_to_br | strip_newlines | replace: ' ', '' }}";
          if (customRedirectsStr) {
            var customRedirects = customRedirectsStr.split('<br/>');

            for (var cri = 0; cri < customRedirects.length; cri += 1) {
              var redirect = customRedirects[cri].split('>');
              var fromPath = redirect[0];
              var toPath = redirect[1];

              if (fromPath && toPath && currentUrl.pathname === fromPath) {
                redirectUrl.pathname = toPath
              }
            }
          }

          {%- if settings.integrate_with_customer_accounts and customer != null -%}
            redirectUrl.searchParams.append('logged_in', 'true');

            {%- if customer.current_location != null -%}
              redirectUrl.searchParams.append('company_location_id', '{{ customer.current_location.id }}');
            {%- endif -%}
          {%- endif -%}

          {% comment %}
            Handle discount code logic (e.g. xxx.myshopify.com/discount/freeshipping?redirect=/products)
            - Add discount code to as param to the edirect URL if the `discount_code` cookie exists
            - Cookie is deleted after to prevent it from being automatically added to other routes
          {% endcomment %}
          var discountCode = getCookie('discount_code');
          if (discountCode) {
            redirectUrl.searchParams.append("discount", discountCode);
            deleteCookie("discount_code");
          }
          console.log(redirectUrl)
          window.location.replace(redirectUrl.href);
        }
      </script>
    {%- endif -%}

    <style>
      body {
        margin: 0;
        font-family: system-ui;
        box-sizing: border-box;
        padding: clamp(1em, 5vw, 5em);
        min-height: 100vh;
        display: grid;
        grid-template-rows: auto 1fr auto;
        line-height: 1.5;
      }
      h1 {
        color: inherit;
        font-size: 1em;
      }
      h1 > a {
        text-decoration: none;
        color: inherit;
      }
      p {
        max-width: 65ch;
      }
      footer {
        opacity: 0.55;
      }
      @media (prefers-color-scheme: dark) {
        body {
          color: #a1b8c1;
          background: rgb(33, 33, 33);
        }
        a {
          color: #81a9fe;
        }
        a:visited {
          color: #c691e8;
        }
        h1 > a,
        h1 > a:visited {
          color: #a1b8c1;
        }
      }
    </style>
  </head>
  <body>
    {%- if should_redirect -%}
      <div class="redirect">
        {%- if settings.storefront_hostname != blank -%}
          <h1>Redirecting...</h1>
          <p>
            <a id="redirect-link" href="https://{{ settings.storefront_hostname }}/">Click here</a>
            if you are not automically redirected.
          </p>
          <script>
            if (!window.Shopify.designMode) {
              var redirectLink = document.getElementById('redirect-link');
              redirectLink.href = window.storefrontRedirectUrl;
            }
          </script>
        {%- else -%}
          <h1>Redirect URL not set</h1>
          <p>Configure the redirects in "Theme settings > Storefront".</p>
        {%- endif -%}
      </div>
    {%- endif -%}
    {{ content_for_layout }}
  </body>
</html>
