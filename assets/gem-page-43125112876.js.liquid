{% comment %}
	GEMPAGE BUILDER (https://apps.shopify.com/gempage)

	You SHOULD NOT modify source code in this page because
	It is automatically generated from GEMPAGE BUILDER
	Try to edit page with the live editor.
{% endcomment %}

    jQuery(function() {
        var $module = jQuery('#m-1566247962017').children('.module');
        $module.gfV3Product();
    });
  
    jQuery(function() {
        var $module = jQuery('#m-1566247962017-2').children('.module');
        $module.gfV3ProductPrice();
    });
  
    jQuery(function() {
        var $module = jQuery('#m-1568828921769').children('.module');
        $module.gfV3ProductCartButton({ onItemAdded: function() {}});
    });
  
    jQuery(function() {
        var $module = jQuery('#m-1566247873011').children('.module');
        $module.gfV3Product();
    });
  
    jQuery(function() {
        var $module = jQuery('#m-1566247873011-2').children('.module');
        $module.gfV3ProductPrice();
    });
  
    jQuery(function() {
        var $module = jQuery('#m-1568823433487').children('.module');
        $module.gfV3ProductCartButton({ onItemAdded: function() {}});
    });
  
    jQuery(function() {
        try {
            var $module = jQuery('#m-1563911285822').children('.module');
            var single   = $module.attr('data-single');
            var openDefault  = $module.attr('data-openDefault');
            var openTab  = $module.attr('data-openTab');
            var mode     = jQuery('.gryffeditor').hasClass('editing') ? 'dev' : 'production';

            if(openDefault == 0 || openDefault == '0') {
                openTab = '0';
            }

            $module.gfAccordion({
                single: single,
                openTab: openTab,
                mode: mode
            });

            var borderColor = $module.attr('data-borderColor');
            var borderSize = $module.attr('data-borderSize');

            $module.children('[data-accordion]').children('[data-control]').css('border-bottom', borderSize + ' solid ' + borderColor);
            $module.children('[data-accordion]').children('[data-content]').children().css('border-bottom', borderSize + ' solid ' + borderColor);

        } catch(err) {}
    });
  jQuery(function() {
  var mode = jQuery('.gryffeditor').hasClass('editing') ? 'dev' : 'production';
  var $module = jQuery('#m-1620734488788').children('.module');
  if (mode == 'dev') {
      jQuery('#m-1620734488788').attr('data-name', '').css('background-image', 'none').removeAttr('data-image');
      
      var flag = true;
      var $bkLiquid = parent.jQuery('body').find('#gfFrame').contents().find('#module-1620734488788');
      if ($bkLiquid && $bkLiquid.length > 0) {
          var $settings = $bkLiquid.find('.settings');
          try {
              var name = '';
              var imageUrl = '';
              settings = JSON.parse($settings.html());
              for (var i = 0; i < settings.length; i++) {
                  if (settings[i].name == 'name') {
                      name = settings[i].default_value
                  }
                  if (settings[i].name == 'image') {
                      imageUrl = settings[i].default_value
                  }
              }
              if (imageUrl != '') {
                  flag = false;
                  jQuery('#m-1620734488788').css('background-image', 'url(' + imageUrl + ')').css('min-height', '100px').attr('data-image', 'true');
              }
              if (name != '' && name != 'Custom Code') {
                  flag = false;
                  jQuery('#m-1620734488788').attr('data-name', name);
              }
          } catch(error) {
              console.log(error);
          }
      }
      if (flag) {
          jQuery('#m-1620734488788').attr('data-name', 'Right click on the module, then choose Edit Html / Liquid option to start writing your custom code.');
      }
  }
});
        jQuery(function() {
            var $module = jQuery('#m-1563984023210');
            var mode = jQuery('.gryffeditor').hasClass('editing') ? 'dev' : 'production';
            $module.css({
                'height': 'auto'
            });
            jQuery(window).resize(function(){
                $module.css('height', 'auto');
            });
            $module.children('.module').removeClass('full-height');

            var image = $module.children('.module').data('image') || '';
            if ($module.children('.module').data('speed') || $module.children('.module').data('speed') == 0) {
                var speed = parseFloat($module.children('.module').data('speed'));
            } else {
                var speed = 0.2;
            }
            if($module.data('gfv3parallax') != undefined) {
                $module.removeData('gfv3parallax');
            }
            $module.gfV3Parallax({
                'image': image,
                'speed': speed,
                'mode': mode
            });
            if(mode == 'dev') {
                var moduleId = "1563984023210";
                var moduleIdSlug = moduleId.toString().replace(/-/g, '');
                if (moduleIdSlug == "1563984023210") {
                    window.getParallax1563984023210 = function() {
                        return $module.data('gfv3parallax');
                    }
                }
            }
        }); 
    jQuery(function() {
    try {
var $module = jQuery('#m-1557778522028').children('.module');   
var navspeed = $module.data('navspeed'),
    autoplaytimeout = $module.data('autoplaytimeout'),
    autoplayhoverpause = $module.data('autoplayhoverpause'),
    navlg = $module.data('navlg'),
    navmd = $module.data('navmd'),
    navsm = $module.data('navsm'),
    navxs = $module.data('navxs'),
    collg = $module.data('collg'),
    colmd = $module.data('colmd'),
    colsm = $module.data('colsm'),
    colxs = $module.data('colxs'),
    dotslg = $module.data('dotslg'),
    dotsmd = $module.data('dotsmd'),
    dotssm = $module.data('dotssm'),
    dotsxs = $module.data('dotsxs'),
    marginlg = parseInt($module.data('marginlg')),
    marginmd = parseInt($module.data('marginmd')),
    marginsm = parseInt($module.data('marginsm')),
    marginxs = parseInt($module.data('marginxs'));
    
var mode = jQuery('.gryffeditor').hasClass('editing') ? 'dev' : 'production';
if(mode == 'production') {
    var autoplay = $module.data('autoplay'), 
loop = $module.data('loop');
} else {
    var autoplay = 0, 
loop = 0;
}
    
$module.owlCarousel({
    mouseDrag: false,
    autoplayHoverPause: autoplayhoverpause,
    autoplay: autoplay,
    autoplayTimeout: autoplaytimeout,
    loop: loop,
    navSpeed: navspeed,
    autoWidth: !1,
    responsiveClass:true,
    responsive:{
0:{
    items:colxs,
    nav: navxs,
    dots:dotsxs,
    margin: marginxs,
    slideBy: 3
},
768:{
    items:colsm,
    nav: navsm,
    dots:dotssm,
    margin: marginsm,
    slideBy: 3
},
992:{
    items:colmd,
    nav: navmd,
    dots:dotsmd,
    margin: marginmd,
    slideBy: 3
},
1200:{
    items:collg,
    nav: navlg,
    dots:dotslg,
    margin: marginlg,
    slideBy: 3
}
    }
}); 
    } catch(err) {}

});jQuery(function() {
    try {
var $module = jQuery('#m-1557950609067').children('.module');   
var navspeed = $module.data('navspeed'),
    autoplaytimeout = $module.data('autoplaytimeout'),
    autoplayhoverpause = $module.data('autoplayhoverpause'),
    navlg = $module.data('navlg'),
    navmd = $module.data('navmd'),
    navsm = $module.data('navsm'),
    navxs = $module.data('navxs'),
    collg = $module.data('collg'),
    colmd = $module.data('colmd'),
    colsm = $module.data('colsm'),
    colxs = $module.data('colxs'),
    dotslg = $module.data('dotslg'),
    dotsmd = $module.data('dotsmd'),
    dotssm = $module.data('dotssm'),
    dotsxs = $module.data('dotsxs'),
    marginlg = parseInt($module.data('marginlg')),
    marginmd = parseInt($module.data('marginmd')),
    marginsm = parseInt($module.data('marginsm')),
    marginxs = parseInt($module.data('marginxs'));
    
var mode = jQuery('.gryffeditor').hasClass('editing') ? 'dev' : 'production';
if(mode == 'production') {
    var autoplay = $module.data('autoplay'), 
loop = $module.data('loop');
} else {
    var autoplay = 0, 
loop = 0;
}
    
$module.owlCarousel({
    mouseDrag: false,
    autoplayHoverPause: autoplayhoverpause,
    autoplay: autoplay,
    autoplayTimeout: autoplaytimeout,
    loop: loop,
    navSpeed: navspeed,
    autoWidth: !1,
    responsiveClass:true,
    responsive:{
0:{
    items:colxs,
    nav: navxs,
    dots:dotsxs,
    margin: marginxs,
    slideBy: 3
},
768:{
    items:colsm,
    nav: navsm,
    dots:dotssm,
    margin: marginsm,
    slideBy: 3
},
992:{
    items:colmd,
    nav: navmd,
    dots:dotsmd,
    margin: marginmd,
    slideBy: 3
},
1200:{
    items:collg,
    nav: navlg,
    dots:dotslg,
    margin: marginlg,
    slideBy: 3
}
    }
}); 
    } catch(err) {}

});
    jQuery(function() {
        var $module = jQuery('#m-1564088547019');
        var mode = jQuery('.gryffeditor').hasClass('editing') ? 'dev' : 'production';
        $module.css({
            'height': 'auto'
        });
        jQuery(window).resize(function(){
            $module.css('height', 'auto');
        });
        $module.children('.module').removeClass('full-height');

        var image = $module.children('.module').data('image') || '';
        if ($module.children('.module').data('speed') || $module.children('.module').data('speed') == 0) {
            var speed = parseFloat($module.children('.module').data('speed'));
        } else {
            var speed = 0.2;
        }
        if($module.data('gfv3parallax') != undefined) {
            $module.removeData('gfv3parallax');
        }
        $module.gfV3Parallax({
            'image': image,
            'speed': speed,
            'mode': mode
        });
        if(mode == 'dev') {
            var moduleId = "1564088547019";
            var moduleIdSlug = moduleId.toString().replace(/-/g, '');
            if (moduleIdSlug == "1564088547019") {
                window.getParallax1564088547019 = function() {
                    return $module.data('gfv3parallax');
                }
            }
        }
    });
  